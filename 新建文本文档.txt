场景：
像游戏中的npc, 怪物这些是在哪个目录下的呢？
一般来说 rpg游戏是有场景这个概念的 这些都属于场景里的


场景和地图是什么关系呢？
场景有很多个 每个场景都是一个地图

那可以跟我大概说一下场景的整个概念吗？场景的大致结构是怎么样的？
场景就是玩家 所在的地方 
我们游戏就是啊 进游戏 主城就是个场景 
有npc  有其他玩家

如果我想看看具体的代码实现要看哪个包或者是类呢？或者构建一个场景需要什么呢？怎么让场景和玩家联系起来？
进入地图 碰到敌人 杀掉  碰到npc 对话 或者购买
就是用文字来描述场景

这个好像可以用方法来实现，传入玩家和实体，判断是敌人还是npc，调用攻击或对话方法这样吗？
构建一个场景更好看吧

那要怎么去构建这样一个场景呢？场景可以看作一个类吗？如果可以的话就和地图差不多了，只是把原来地图里的实体放在场景里
场景的基本属性就是要有地图吧
场景就是一个类
里面的地图不一样 就是不同的场景了

不同的地图npc和怪物肯定不同，那这些信息应该是和地图绑定的，只是需要加载到场景里面，是这样吗？

那碰到怪物或是碰到npc可以看作场景这个类中的一个方法吗？或者怎样去设计这个逻辑？
有场景就有位置这个概念了  不同的位置放不同的东西

我看到有一个Grid类，然后NpcResource里面每一个npc都有对应的x, y 坐标，是不是每一个Npc都会有一个Grid引用，比如玩家 BasePlayerInfo 也会有一个Grid引用，那么场景里面需要有一个玩家的引用，玩家那边需要一个场景的成员属性， 然后移动就是直接设置玩家的这个Grid, 之后遍历怪物和npc的Grid, 发现相等调用相应方法， 这样吗？

scene:
玩家playerInfo
玩家playerInfo有Grid引用
地图mapId
地图map两个字段：怪物id和npc id    
地图需要有一个有障碍物的二维数组信息(参考初始化地图时的代码),设置为1
怪物和npc是两个不同的类
怪物和npc都有坐标，对应在地图中的位置
将地图中的怪物和npc放入场景中
场景中需要有一个100*100的坐标系（二位数组形式，默认全部都是0），作为场景的一个成员，加载场景时初始化这个坐标系
加载场景时获取所有的怪物和npc的坐标，并将地图中的坐标系对应坐标的位置设置为1
玩家在场景中移动就是玩家的Grid的设置
玩家应该具有移动方向和速度
假设有八个方向（0-7)，玩家的移动速度默认是1
假设玩家碰到障碍物，玩家的速度变为0
玩家的坐标变化之前检测这个方向下一个坐标是否存在障碍物(数字3)，存在那么设置玩家速度为0
玩家的坐标变化是方向和距离*玩家速度共同决定的
玩家移动后有新的坐标，移动后检测该位置是否之前存在怪物或npc,再执行相应操作
玩家中不需要序列化的属性可以加上Transient关键字
障碍物和npc和怪物在二维数组中都是用1来表示，只是玩家在碰到1之后拿到当前的Grid再去和怪物或是npc的Grid比较，看看哪个符合
在玩家进入场景的时候才加载场景
地图需要有个宽和高 mapWidth,mapHeight属性还有玩家出生点属性50，50 bornX, bornY
初始化地图的时候读取地图的玩家出生点属性并设置到玩家的Grid中
障碍物假设是一个外面的正方形，所以x，y 在 5-95之间设为0，否则设为1 即为有障碍。 

scene service:
initMap(int mapId);

npc:
id, name, 对话内容， List<Goods> , int 所在地图id, int x,y 在地图中的坐标

怪物：
id, name, Level， List<Skill> , int x,y 地图中的坐标， int 所在地图id, int 类型：小怪还是boss(1,2) 小怪是四个一组（x,y ...)， boss是只有一个

map:
id, name, 障碍物相关信息：障碍物的宽度和高度（假设是5），地图的高和宽， 存在的npc id， 存在的怪物id, 玩家的出生点x,y 

scene: 
场景中存在一个地图引用， 场景id和name就是地图的id和name.








